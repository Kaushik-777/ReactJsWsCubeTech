{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpurn\\\\wscube-tech\\\\src\\\\components\\\\EventHandling\\\\HandleKeyPress.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HandleKeyPress = () => {\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      alert('Enter key was pressed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = HandleKeyPress;\nexport default HandleKeyPress;\nvar _c;\n$RefreshReg$(_c, \"HandleKeyPress\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HandleKeyPress","handleKeyPress","event","key","alert","children","type","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kpurn/wscube-tech/src/components/EventHandling/HandleKeyPress.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst HandleKeyPress = () => {\r\n    const handleKeyPress = (event) => {\r\n        if(event.key === 'Enter') {\r\n            alert('Enter key was pressed');\r\n        }\r\n    }\r\n  return (\r\n    <div>\r\n      <input type='text' onKeyPress={handleKeyPress}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HandleKeyPress;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAC9B,IAAGA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACtBC,KAAK,CAAC,uBAAuB,CAAC;IAClC;EACJ,CAAC;EACH,oBACEL,OAAA;IAAAM,QAAA,eACEN,OAAA;MAAOO,IAAI,EAAC,MAAM;MAACC,UAAU,EAAEN;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAAAC,EAAA,GAXKZ,cAAc;AAapB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}